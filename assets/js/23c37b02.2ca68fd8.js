"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[18198],{14249:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a Viewport.","params":[],"returns":[{"desc":"","lua_type":"BasicPane"}],"function_type":"static","source":{"line":44,"path":"src/viewport/src/Client/Viewport.lua"}},{"name":"blend","desc":"Creates a Viewport and render it to Blend.","params":[{"name":"props","desc":"Assigned to the ViewportFrame or aassign to the camera (FieldOfView, Instance, Transparency).","lua_type":"{ string }"}],"returns":[{"desc":"","lua_type":"Observable<Instance>"}],"function_type":"static","source":{"line":78,"path":"src/viewport/src/Client/Viewport.lua"}},{"name":"SetInstance","desc":"Set the targetted instance.","params":[{"name":"instance","desc":"","lua_type":"Instance"}],"returns":[],"function_type":"method","source":{"line":132,"path":"src/viewport/src/Client/Viewport.lua"}}],"properties":[],"types":[],"name":"Viewport","desc":"Creates a ViewportFrame with size fitting and drag controls.\\n\\n```lua\\n\\tlocal viewport = Viewport.new()\\n\\tviewport:SetInstance(instance)\\n\\n\\tmaid:GiveTask(viewport:Render({\\n\\t\\tParent = target;\\n\\t}):Subscribe())\\n```","source":{"line":15,"path":"src/viewport/src/Client/Viewport.lua"}}')}}]);