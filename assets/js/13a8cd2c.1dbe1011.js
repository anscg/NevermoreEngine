"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57468],{61403:l=>{l.exports=JSON.parse('{"functions":[],"properties":[{"name":"Ragdoll","desc":"Apply this binder to a humanoid to ragdoll it. Humanoid must already have [Ragdollable] defined.\\n\\n```lua\\nlocal ragdoll = serviceBag:GetService(RagdollBindersClient).Ragdoll:Get(humanoid)\\nif ragdoll then\\n\\tprint(\\"Is ragdolled\\")\\nelse\\n\\tprint(\\"Not ragdolled\\")\\nend\\n```","lua_type":"Binder<RagdollClient>","source":{"line":39,"path":"src/ragdoll/src/Client/RagdollBindersClient.lua"}},{"name":"Ragdollable","desc":"Enables ragdolling on a humanoid.","lua_type":"Binder<RagdollableClient>","source":{"line":46,"path":"src/ragdoll/src/Client/RagdollBindersClient.lua"}},{"name":"RagdollaRagdollHumanoidOnDeathble","desc":"Automatically applies ragdoll upon humanoid death.","lua_type":"Binder<RagdollHumanoidOnDeathClient>","source":{"line":53,"path":"src/ragdoll/src/Client/RagdollBindersClient.lua"}},{"name":"RagdollHumanoidOnFall","desc":"Automatically applies ragdoll upon humanoid fall.","lua_type":"Binder<RagdollHumanoidOnFallClient>","source":{"line":60,"path":"src/ragdoll/src/Client/RagdollBindersClient.lua"}}],"types":[],"name":"RagdollBindersClient","desc":"Holds binders for Ragdolls on the client. Be sure to initialize on the server. See [RagdollBindersClient] for details.\\nBe sure to use a [ServiceBag] to initialize this service.\\n\\n```lua\\n-- Client.lua\\n\\nlocal serviceBag = require(\\"ServiceBag\\")\\nserviceBag:GetService(require(\\"RagdollBindersClient\\"))\\n\\nserviceBag:Init()\\nserviceBag:Start()\\n```","realm":["Client"],"source":{"line":18,"path":"src/ragdoll/src/Client/RagdollBindersClient.lua"}}')}}]);