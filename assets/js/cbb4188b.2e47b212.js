"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[51534],{76164:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new ObservableSet","params":[],"returns":[{"desc":"","lua_type":"ObservableSet<T>"}],"function_type":"static","source":{"line":22,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"isObservableSet","desc":"Returns whether the value is an observable set","params":[{"name":"value","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":65,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"ObserveItemsBrio","desc":"Observes all items in the set","params":[],"returns":[{"desc":"","lua_type":"Observable<Brio<T>>"}],"function_type":"method","source":{"line":73,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"Contains","desc":"Returns whether the set contains the item","params":[{"name":"item","desc":"","lua_type":"T"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":107,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"GetCount","desc":"Gets the count of items in the set","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":117,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"ObserveCount","desc":"Observes the count of the set","params":[],"returns":[{"desc":"","lua_type":"Observable<number>"}],"function_type":"method","source":{"line":125,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"Add","desc":"Adds the item to the set if it does not exists.","params":[{"name":"item","desc":"","lua_type":"T"}],"returns":[{"desc":"Call to remove","lua_type":"callback"}],"function_type":"method","source":{"line":134,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"Remove","desc":"Removes the item from the set if it exists.","params":[{"name":"item","desc":"","lua_type":"T"}],"returns":[],"function_type":"method","source":{"line":154,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"GetFirstItem","desc":"Gets an arbitrary item in the set (not guaranteed to be ordered)","params":[],"returns":[{"desc":"","lua_type":"T"}],"function_type":"method","source":{"line":171,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"GetList","desc":"Gets a list of all entries.","params":[],"returns":[{"desc":"","lua_type":"{ T }"}],"function_type":"method","source":{"line":180,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"GetSetCopy","desc":"Gets a copy of the set","params":[],"returns":[{"desc":"","lua_type":"{ [T]: true }"}],"function_type":"method","source":{"line":192,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"Destroy","desc":"Cleans up the ObservableSet and sets the metatable to nil.","params":[],"returns":[],"function_type":"method","source":{"line":203,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}}],"properties":[{"name":"ItemAdded","desc":"Fires when an item is added","lua_type":"Signal<T>","readonly":true,"source":{"line":38,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"ItemRemoved","desc":"Fires when an item is removed.","lua_type":"Signal<T>","readonly":true,"source":{"line":47,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}},{"name":"CountChanged","desc":"Fires when the count changes.","lua_type":"RBXScriptSignal","source":{"line":55,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}}],"types":[],"name":"ObservableSet","desc":"A list that can be observed for blend and other components","source":{"line":5,"path":"src/observablecollection/src/Shared/ObservableSet.lua"}}')}}]);