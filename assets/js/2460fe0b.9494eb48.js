"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[31326],{81507:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new Ragdoll. Should be done via [Binder]. See [RagdollBindersServer].","params":[{"name":"humanoid","desc":"","lua_type":"Humanoid"},{"name":"_serviceBag","desc":"","lua_type":"ServiceBag"}],"returns":[{"desc":"","lua_type":"Ragdoll"}],"function_type":"static","source":{"line":37,"path":"src/ragdoll/src/Server/Classes/Ragdoll.lua"}}],"properties":[],"types":[],"name":"Ragdoll","desc":"Base class for ragdolls, meant to be used with binders. See [RagdollBindersServer].\\nWhile a humanoid is bound with this class, it is ragdolled.\\n\\n```lua\\n-- Be sure to do the service init on the client too\\nlocal serviceBag = require(\\"ServiceBag\\")\\nlocal ragdollBindersServer = serviceBag:GetService(require(\\"RagdollBindersServer\\"))\\n\\nserviceBag:Init()\\nserviceBag:Start()\\n\\n-- Enable ragdoll\\nragdollBindersServer.Ragdoll:Bind(humanoid)\\n\\n-- Disable ragdoll\\nragdollBindersServer.Ragdoll:Unbind(humanoid)\\n```","source":{"line":22,"path":"src/ragdoll/src/Server/Classes/Ragdoll.lua"}}')}}]);